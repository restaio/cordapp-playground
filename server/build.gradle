group 'restaio'
version '0.0.1'

apply plugin: 'kotlin'
apply plugin: 'net.corda.plugins.cordformation'
apply plugin: 'net.corda.plugins.quasar-utils'

sourceSets {
    main {
        java.srcDir 'src'
        resources.srcDirs 'res', '../logging/main'
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testCompile "junit:junit:$junit_version"

    // Corda integration dependencies
    cordaCompile "net.corda:corda-core:$corda_release_version"
    cordaCompile "net.corda:corda-finance:$corda_release_version"
    cordaCompile "net.corda:corda-jackson:$corda_release_version"
    cordaCompile "net.corda:corda-rpc:$corda_release_version"
    cordaRuntime "net.corda:corda:$corda_release_version"
    testCompile "net.corda:corda-node-driver:$corda_release_version"

    compile("org.springframework.boot:spring-boot-starter-websocket:$spring_boot_version") {
        exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
    }
    compile "org.springframework.boot:spring-boot-starter-log4j2:$spring_boot_version"
    compile "org.apache.logging.log4j:log4j-web:2.7"

    cordapp project(':estates')
}

task runAServer(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'restaio.server.Server'
    environment 'server.port', '8080'
    environment 'config.rpc.port', '10006'
}

task runBServer(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'restaio.server.Server'
    environment 'server.port', '8081'
    environment 'config.rpc.port', '10009'
}